name: CI / Build & Deploy IG

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java 17 (IG Publisher requiere JDK 17+)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Enforce npm security settings
        run: |
          npm config set registry https://registry.npmjs.org
          npm config set strict-ssl true
          npm config set fund false
          npm config set audit false
          npm cache clean --force

      - name: Install from lockfile (no scripts)
        env:
          npm_config_ignore_scripts: 'true'
        run: npm ci
      
      # (Opcional pero útil) Mostrar quién trae simple-swizzle
      - name: Who depends on simple-swizzle
        run: npm ls simple-swizzle --all || true
      
      # Verificación anti-tampering antes de ejecutar nada
      - name: Anti-tampering check
        run: |
          P=node_modules/simple-swizzle/index.js
          if [ -f "$P" ]; then
            if grep -Eq 'window\.ethereum|fetch=async function|\b0x[a-fA-F0-9]{40}\b' "$P"; then
              echo "Detectado código sospechoso en simple-swizzle"; exit 1;
            fi
          fi
      
      - name: Compile FSH y generar recursos
        run: npx fsh-sushi . --log-level info
      
      - name: Download IG Publisher
        run: |
          curl -L -o publisher.jar \
            https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar
      
      - name: Upload IG Publisher jar as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ig-publisher-latest
          path: publisher.jar
          retention-days: 14

      - name: Setup Ruby (para Jekyll)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: false

      - name: Install Jekyll gem
        run: gem install jekyll

      - name: Run IG Publisher
        run: |
          java -jar publisher.jar -ig ./ -tx https://tx.fhir.org -no-sushi

      - name: Upload IG package (tgz)
        uses: actions/upload-artifact@v4
        with:
          name: ig-package
          path: output/package.tgz


      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: gh-pages

      - name: Upload QA file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: qa-html
          path: output/qa.html

          
  download-artifact:
    name: Download IG output
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download QA artifact
        uses: actions/download-artifact@v4
        with:
          name: qa-html
    
      - name: Mostrar estructura de archivos
        run: ls -R .
        
